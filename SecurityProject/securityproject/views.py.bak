from pyramid.view import view_config
from pyramid.response import Response
from pyramid.renderers import render_to_response
from pyramid.httpexceptions import HTTPFound
from pyramid.httpexceptions import HTTPForbidden
from pyramid.security import remember
from pyramid.security import forget


from sqlalchemy.exc import DBAPIError

from .models import (
    DBSession,
    Users,
    )


@view_config(route_name='home', renderer='CompanyFace/mytemplate.pt')
def my_view(request):
    logged_in = request.authenticated_userid is not None
    print logged_in
    message = ""
    try:
        if not logged_in:
            if 'login' in request.params:
                user = DBSession.query(Users).filter(Users.email == request.POST['Email'], Users.password == request.POST['Password']).first()
                if not user:
                    message = "Invalid username/password"
                else:
                    response = render_to_response('CompanyFace/mytemplate.pt',{'logged_in':True, 'message':"User successfully logged in"},request=request)
                    response.headerlist.extend(headers)
                    return response
            elif 'register' in request.params:
                controls = request.POST
                if controls['Password'] == controls['Password2']:
                    DBSession.add(Users(controls['Email'], controls['Password']))
                    #DBSession.commit()
                    message = "User sucessfully created"
                else:
                    message = "Error: Passwords must match!"
    except KeyError:
        message = "Error: Bad POST request"
    except DBAPIError:
        message = "Error: Could not connect to database"
    print message
    return {'logged_in': logged_in, 'message': message}

@view_config(route_name='login')#, renderer='templates/login.pt')
def login(request):
    if 'login' in request.params:
        user = DBSession.query(Users).filter(Users.email == request.POST['email'], Users.password == request.POST['password']).first()
        if not user:
            return render_to_response('templates/login.pt', {'message':'Invalid Email/Password'})
        return render_to_response('templates/welcome.pt', {'email':request.POST['email'],'user_id':user.user_id}, request=request)
    else:
        return render_to_response('templates/login.pt', {'message':''})

@view_config(route_name='register', renderer='templates/register.pt')
def register(request):
    #return {'message': str(request)}    
    if 'register' in request.params:
        controls = request.POST
        if 'password' in controls and controls['password'] == controls['password2']:
            DBSession.add(Users(controls['email'], controls['password']))
            #DBSession.commit()
            return {'message':'User sucessfully created'}
        else:
            return {'message':'Error: Passwords must match!'}
    return {'message':''} 

@view_config(route_name='db', renderer='templates/database.pt')
def db(request):
    try:
        one = DBSession.query(Users).filter(Users.email == 'one').all()
    except DBAPIError:
        return Response(conn_err_msg, content_type='text/plain', status_int=500)
    return {'one': one[3], 'project': 'SecurityProject'}

conn_err_msg = """\
Pyramid is having a problem using your SQL database.  The problem
might be caused by one of the following things:

1.  You may need to run the "initialize_database_db" script
    to initialize your database tables.  Check your virtual
    environment's "bin" directory for this script and try to run it.

2.  Your database server may not be running.  Check that the
    database server referred to by the "sqlalchemy.url" setting in
    your "development.ini" file is running.

After you fix the problem, please restart the Pyramid application to
try it again.
"""


